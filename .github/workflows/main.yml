name: Build

on: [create]

jobs:
  linux-basic:
    runs-on: ubuntu-latest  
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Build on Linux + Make a tarball
      run: |
        sudo apt install libxss1 libgstreamer-plugins-base1.0-0 libgstreamer1.0-0 qt5-default libqt5gui5 libqt5webengine5 libqt5webenginecore5 libqt5webenginewidgets5 libqt5printsupport5 libqt5quickwidgets5 libqt5x11extras5 libxss1 
        sudo apt install patchelf binutils cmake pkg-config qtbase5-dev qtwebengine5-dev libqt5x11extras5-dev  qtbase5-private-dev libssl-dev libxss-dev libxmu-dev
        bash ./src/ui/linux/package.sh
    - name: Upload to GitHub
      run: |
        EVENT_TYPE=$(cat "$GITHUB_EVENT_PATH" | jq -r ".ref_type")
        if [[ "$EVENT_TYPE" != "tag" ]]; then exit 0; fi
        TAG_NAME=$(cat "$GITHUB_EVENT_PATH" | jq -r ".ref")
        ./dist/upload-github-release-asset.sh github_api_token=${{ secrets.GITHUB_TOKEN }} owner=MartinBriza repo=toggldesktop tag="$TAG_NAME" filename="toggldesktop_x86_64.tar.gz"
        
  linux-ubuntu1604:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Build a Debian package
      run: |
        exit 0 # don't waste resources while it doesn't work
        sudo add-apt-repository ppa:nextcloud-devs/client
        sudo apt install devscripts cmake debhelper pkg-config qtbase5-dev qtwebengine5-dev libqt5x11extras5-dev qtbase5-private-dev libssl-dev libxss-dev libxmu-dev
        dch -D unstable --package "toggldesktop" -v ${TAG_NAME/v/} "General bug fixes and improvements" -u low -M
        rm Makefile
        debuild

        
  linux-ubuntu1804:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Build a Debian package
      run: |
        TAG_NAME=$(cat "$GITHUB_EVENT_PATH" | jq -r ".ref")
        base64 -d <<< ${{ secrets.CERT_LINUX_DEB64 }} > key.asc
        gpg --import key.asc
        sudo apt install devscripts cmake debhelper pkg-config qtbase5-dev qtwebengine5-dev libqt5x11extras5-dev qtbase5-private-dev libssl-dev libxss-dev libxmu-dev
        dch -D unstable --package "toggldesktop" -v ${TAG_NAME/v/} "General bug fixes and improvements" -u low -M
        rm Makefile
        debuild
        ls
        ls debian
        ls ..
    - name: Upload to GitHub
      run: |
        EVENT_TYPE=$(cat "$GITHUB_EVENT_PATH" | jq -r ".ref_type")
        if [[ "$EVENT_TYPE" != "tag" ]]; then exit 0; fi
        TAG_NAME=$(cat "$GITHUB_EVENT_PATH" | jq -r ".ref")
        ./dist/upload-github-release-asset.sh github_api_token=${{ secrets.GITHUB_TOKEN }} owner=MartinBriza repo=toggldesktop tag="$TAG_NAME" filename="../toggldesktop_${TAG_NAME/v/}_amd64.deb"
        
  linux-flatpak-kde:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Build Linux Flatpak package - KDE based
      run: |
        sudo apt install flatpak flatpak-builder
        sudo flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
        sudo flatpak install --system -y flathub org.kde.Platform//5.12
        sudo flatpak install --system -y flathub org.kde.Sdk//5.12 
        pushd dist/flatpak
        sudo flatpak-builder --repo=flatpak-repo --force-clean flatpak-build com.toggl.TogglDesktop.json
        flatpak build-bundle flatpak-repo com.toggl.TogglDesktop.flatpak com.toggl.TogglDesktop
        popd
    - name: Upload to GitHub
      run: |
        EVENT_TYPE=$(cat "$GITHUB_EVENT_PATH" | jq -r ".ref_type")
        if [[ "$EVENT_TYPE" != "tag" ]]; then exit 0; fi
        TAG_NAME=$(cat "$GITHUB_EVENT_PATH" | jq -r ".ref")
        ./dist/upload-github-release-asset.sh github_api_token=${{ secrets.GITHUB_TOKEN }} owner=MartinBriza repo=toggldesktop tag="$TAG_NAME" filename="com.toggl.TogglDesktop.flatpak"

  mac:
    runs-on: macOS-10.14
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Build on macOS
      run: |
        base64 -D <<<  ${{ secrets.CERT_MACOS_TEMPORARY }} > cert.cer
        security import cert.cer "/Users/runner/Library/Keychains/login.keychain-db"
        security unlock-keychain -p '' "/Users/runner/Library/Keychains/login.keychain-db"
        make deps
        make
        
  windows-32bit:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Build on Windows x86
      run: |
        choco install nsis -y
        "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe" src/ui/windows/TogglDesktop/TogglDesktop.sln /p:Configuration=Release /p:Platform="x86" /t:Clean,Build /restore
        cd dist/windows
        makensis TogglDesktopInstaller-x86.nsi
    - name: Upload to GitHub
      run: |
        EVENT_TYPE=$(cat "$GITHUB_EVENT_PATH" | jq -r ".ref_type")
        if [[ "$EVENT_TYPE" != "tag" ]]; then exit 0; fi
        TAG_NAME=$(cat "$GITHUB_EVENT_PATH" | jq -r ".ref")
        ./dist/upload-github-release-asset.sh github_api_token=${{ secrets.GITHUB_TOKEN }} owner=MartinBriza repo=toggldesktop tag="$TAG_NAME" filename="src/ui/windows/TogglDesktopInstaller.exe"
      shell: bash
        
  windows-64bit:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Build on Windows x64
      run: |
        choco install nsis -y
        "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe" src/ui/windows/TogglDesktop/TogglDesktop.sln /p:Configuration=Release /p:Platform="x64" /t:Clean,Build /restore
        cd dist/windows
        makensis TogglDesktopInstaller-x64.nsi
    - name: Upload to GitHub
      run: |
        EVENT_TYPE=$(cat "$GITHUB_EVENT_PATH" | jq -r ".ref_type")
        if [[ "$EVENT_TYPE" != "tag" ]]; then exit 0; fi
        TAG_NAME=$(cat "$GITHUB_EVENT_PATH" | jq -r ".ref")
        ./dist/upload-github-release-asset.sh github_api_token=${{ secrets.GITHUB_TOKEN }} owner=MartinBriza repo=toggldesktop tag="$TAG_NAME" filename="src/ui/windows/TogglDesktopInstaller-x64.exe"
      shell: bash

  windows-store:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v1
    - name: Build on Windows for Microsoft Store (no signing)
      run: |
        "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe" src/ui/windows/TogglDesktop/TogglDesktop.sln /p:Configuration=StoreRelease /p:Platform="x86" /p:AppxPackageSigningEnabled=false /t:Clean,Build /restore -m
        "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe" src/ui/windows/TogglDesktop/TogglDesktop.sln /p:Configuration=StoreRelease /p:Platform="x64" /p:UapAppxPackageBuildMode=CI /p:AppxBundle=Always /p:AppxBundlePlatforms="x86|x64" /p:AppxPackageSigningEnabled=false /t:Clean,Build /restore -m  
